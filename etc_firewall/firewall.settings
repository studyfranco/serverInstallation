#! /bin/bash
source /etc/firewall/firewall.tools
IPT=/sbin/iptables
IPT6=/sbin/ip6tables
IPS=/sbin/ipset
ROUTE=/sbin/route
SED=/bin/sed
DUMPCO=/bin/ss
DOCKER=/bin/docker
IFCONFIG=/usr/sbin/ifconfig
JQ=/usr/bin/jq
FAILBAN=/usr/bin/fail2ban-client

IPSLISTBADIP="bad_ip"
IPSLISTGOODIP="good_ip"
IPSLOCALIPS="l"
IPSINTERNALIPS="i"
IPSPLEXIPS="plex_ip"
IPSDOH="doh_serv"
IPSLOCALS="generic_local"
IPCCOPEN="open_cc_ips"

mainInter="eth0"
declare -a INTEROut=("eth0;192.168.0.0/24;fc00::/64")
declare -a interfaceToGoOutSide=("virbr1;192.168.100.0/24;fe80:1::/64")
declare -a internInterfaceHaveAccessAsLocal=("virbr1;192.168.100.0/24;fe80:1::/64")
declare -a interfaceLocal=()
declare -A interfaceWithDHCP=( ["virbr1;192.168.100.0/24;fe80:1::/64"]=1 )
declare -a interfaceWithNoRules=() # You need to add the rules, but the structure is create

declare -a dockerNetworkWithInternetAccess=("bridge") # Open to the world (bridge is the default network in docker)
declare -a dockerNetworkWithAccess=() # You need to add the rules, but the structure is create
declare -a dockerAccessBetweenThem=("cSource;cCible;bridge;tcp;55;10;1580") # Securise the communication between your container

# List of trusted IPs
declare -a IPAutor=()
declare -a IPAutorDnatPortTCP=()
declare -a IPAutorDnatPortUDP=()
declare -a IPAutorDockerTCP=()
declare -a IPAutorDockerUDP=()

declare -a internalOpenPortsTCP=()
declare -a internalOpenPortsUDP=()
declare -a internalRedirectPortTCP=()
declare -a internalRedirectPortUDP=()
declare -a internalDnatPortTCP=()
declare -a internalDnatPortUDP=()
declare -a internalDockerTCP=()
declare -a internalDockerUDP=()

declare -a localOpenPortsTCP=("22" "139" "445" "8181")
declare -a localOpenPortsUDP=()
declare -a localRedirectPortTCP=()
declare -a localRedirectPortUDP=()
declare -a localDnatPortTCP=()
declare -a localDnatPortUDP=()
declare -a localDockerTCP=()
declare -a localDockerUDP=()

declare -a countryOpenPort="FR,DE"
declare -a openPortTCP=("53" "14142" "22668" "7349" "7778" "7779" "25575")
declare -a openPortUDP=("53" "7777" "15000" "15777" "7778" "7779" "27015")
declare -a redirectPortTCP=("47890,8096" "47893,5055" "34212,32400")
declare -a redirectPortUDP=()
declare -a dnatPortTCP=()
declare -a dnatPortUDP=()
declare -a openDockerTCP=()
declare -a openDockerUDP=()

declare -a WWopenPortTCP=()
declare -a WWopenPortUDP=()
declare -a WWredirectPortTCP=()
declare -a WWredirectPortUDP=()
declare -a WWdnatPortTCP=()
declare -a WWdnatPortUDP=()
declare -a WWDockerTCP=()
declare -a WWDockerUDP=()

declare -a blockedCountry="AE,BW,BY,BZ,CN,EG,HK,IL,JP,KR,KP,RU,SG,TN"
declare -a blockedCountry2="IN,TW,UA,US,IT,KW,BR,AR"

CHAINIPALLOW="z-allow-ips"
CHAINIPALLOWTCP="z-allow-ips-tcp"
CHAINIPALLOWUDP="z-allow-ips-udp"

CHAINICMPTRAFIC="z-icmp"

CHAINDROPLOG="z-drop-log"
CHAINDROPLOGSELECTOR="z-drop-log-select-trash"
CHAINDROPLOGWITHOUTSELECTOR="z-drop-log-no-select-trash"

CHAINPORTSENTRYOPENTCP="z-port-sentry-open-tcp"
CHAINPORTSENTRYOPENUDP="z-port-sentry-open-udp"
CHAINPORTSENTRYCLOSETCP="z-port-sentry-close-tcp"
CHAINPORTSENTRYCLOSEUDP="z-port-sentry-close-udp"
CHAINPORTSENTRYLOG="z-port-sentry-log"

CHAINOPENSATE="z-open-state"
CHAINOUTTRAFIC="z-output-rules"

CHAINMAININTER="zz"

CHAINMAINOUTINTERICMP="z-main-out-icmp"
CHAINOPENDHCP="z-open-port-dhcp"

CHAINOPENLOCALPORTTCP="z-open-local-tcp"
CHAINOPENLOCALPORTUDP="z-open-local-udp"
CHAINOPENLOCALPORTUDPDHCP="z-open-local-udp-dhcp"

CHAINMAINOUTINTERCR="z-main-out-cr"
CHAINOPENCRPORTTCP="z-main-out-cr-open-tcp"
CHAINOPENCRPORTUDP="z-main-out-cr-open-udp"

CHAINMAINOUTINTERWW="z-main-out-ww"
CHAINOPENWWPORTTCP="z-main-out-ww-open-tcp"
CHAINOPENWWPORTUDP="z-main-out-ww-open-udp"

CHAINMAININTINTERICMP="z-main-inter-icmp"
CHAINMAININTINTERTCP="z-main-inter-tcp"
CHAINMAININTINTERUDP="z-main-inter-udp"
CHAINMAININTINTERUDPDHCP="z-main-inter-udp-dhcp"

CHAINDROPCAST="z-drop-cast"
CHAINMAINOUTINTERDROPBADIPSRC="z-main-out-drop-bad-ip-src"
CHAINMAINOUTINTERLOGBADIPDST="z-main-out-log-bad-ip-dst"
CHAINMAINOUTINTERLOGBADIPDSTWB="z-main-out-log-dst-bad-ip"
CHAINMAINOUTINTERLOGBADIPDSTWC="z-main-out-log-dst-crowd-ip"

CHAINFORWARDFILTER="FORWARD-TRAFIC-FILTER"
CHAINFORWARDFILTERTCP="FORWARD-TRAFIC-FILTER-TCP"
CHAINFORWARDFILTERUDP="FORWARD-TRAFIC-FILTER-UDP"
CHAINFORWARDFILTERICMP="FORWARD-TRAFIC-FILTER-ICM"
CHAINFORWARDTRAFIC="FT"

CHAINPATMAIN="z-redirect-main"
CHAINPATLOG="z-redirect-log"

saveFileGeoIPDB="/etc/firewall/GeoIPCountryWhois.csv"

crowdsecSetIPBeginName="crowdsec-blacklists"
crowdsecSetIP6BeginName="crowdsec6-blacklists"
#! /bin/bash

source /etc/firewall/firewall.settings
source /etc/firewall/firewall.tools

hosts_deny_file="/etc/hosts.deny"

add_doh()
{
	$IPS create $IPSDOH hash:ip,port maxelem 999999999 2> /dev/null
	$IPS flush $IPSDOH
	$IPS add $IPSDOH 8.8.4.4,443 2> /dev/null &
	$IPS add $IPSDOH 8.8.8.8,443 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.112,443 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.9,443 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.9,443 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.10,443 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.10,443 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.11,443 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.11,443 2> /dev/null &
	$IPS add $IPSDOH 104.28.1.106,443 2> /dev/null &
	$IPS add $IPSDOH 104.28.0.106,443 2> /dev/null &
	$IPS add $IPSDOH 45.90.28.0,443 2> /dev/null &
	$IPS add $IPSDOH 45.90.30.0,443 2> /dev/null &
	$IPS add $IPSDOH 176.103.130.131,443 2> /dev/null &
	$IPS add $IPSDOH 176.103.130.130,443 2> /dev/null &
	$IPS add $IPSDOH 176.103.130.132,443 2> /dev/null &
	$IPS add $IPSDOH 176.103.130.134,443 2> /dev/null &
	$IPS add $IPSDOH 96.113.151.147,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.168.9,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.169.9,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.168.168,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.169.168,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.168.10,443 2> /dev/null &
	$IPS add $IPSDOH 185.228.169.11,443 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.112,5053 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.9,5053 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.9,5053 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.10,5053 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.10,5053 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.11,5053 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.11,5053 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.12,5053 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.12,5053 2> /dev/null &
	$IPS add $IPSDOH 9.9.9.13,5053 2> /dev/null &
	$IPS add $IPSDOH 149.112.112.13,5053 2> /dev/null &
	$IPS add $IPSDOH 167.114.220.125,453 2> /dev/null &
	$IPS add $IPSDOH 149.56.228.45,453 2> /dev/null &
	
	local line
	curl -s https://raw.githubusercontent.com/oneoffdallas/dohservers/master/iplist.txt | while read -r line
	do
	  # Vérifie si la ligne n'est pas un commentaire (ne commence pas par #)
	  if [[ ! $line =~ ^\# ]]; then
		# Vérifie si la ligne contient une adresse IPv6
		if is_ipv4 "${line}"; then
		  # Ajoute l'adresse IPv6 au tableau
		  $IPS add ${IPSDOH} ${line},443 2> /dev/null &
		fi
	  fi
	done

	wait
}

add_doh6()
{
	$IPS create ${IPSDOH}6 hash:ip,port maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPSDOH}6
	local line
	curl -s https://raw.githubusercontent.com/oneoffdallas/dohservers/master/ipv6list.txt | while read -r line
	do
	  # Vérifie si la ligne n'est pas un commentaire (ne commence pas par #)
	  if [[ ! $line =~ ^\# ]]; then
		# Vérifie si la ligne contient une adresse IPv6
		if is_ipv6 "${line}"; then
		  # Ajoute l'adresse IPv6 au tableau
		  $IPS add ${IPSDOH}6 ${line},443 2> /dev/null &
		fi
	  fi
	done
	wait
}

add_ipaut()
{
	$IPS create $IPSLISTGOODIP hash:ip maxelem 999999999 2> /dev/null
	$IPS flush $IPSLISTGOODIP 2> /dev/null
	# Ajout des IPV4s autorisé
	local IP
	for IP in "${IPAutor[@]}"; do
		$IPS add $IPSLISTGOODIP $IP 2> /dev/null &
		$ROUTE -n del $IPSLISTGOODIP reject 2> /dev/null &
		$SED -i "/^ALL: ${IPSLISTGOODIP} : DENY/d" "${hosts_deny_file}" &
		#${FAILBAN} set sshd unbanip ${IPSLISTGOODIP} 2> /dev/null &
		#${FAILBAN} set recidive unbanip ${IPSLISTGOODIP} 2> /dev/null &
	done
	wait
}

add_ipaut6()
{
	$IPS create ${IPSLISTGOODIP}6 hash:ip maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPSLISTGOODIP}6 2> /dev/null
	
		#$IPS add $IPSLISTGOODIP $IP 2> /dev/null &
		#$ROUTE -n del $IPSLISTGOODIP reject 2> /dev/null &
		#$SED -i "/^ALL: ${IPSLISTGOODIP} : DENY/d" "${hosts_deny_file}" &
		#${FAILBAN} set sshd unbanip ${IPSLISTGOODIP} 2> /dev/null &
		#${FAILBAN} set recidive unbanip ${IPSLISTGOODIP} 2> /dev/null &
		
	wait
}

add_ipblock()
{
	local pid
	$IPS create ${IPSLISTBADIP} hash:ip maxelem 999999999 2> /dev/null &
	$IPS create temp_${IPSLISTBADIP} hash:ip maxelem 999999999 2> /dev/null && \
		$IPS flush temp_${IPSLISTBADIP} 2> /dev/null & pid=$!
	# Creation d'un groupe pour les IPV4s Bloques
	declare -a IPBlock
	mapfile -t IPBlock < /etc/firewall/firewall.block.ip
	local IP
	wait $pid
	for IP in "${IPBlock[@]}"; do
		add_ipblock_actions "${IP}" &
		#sleep 0.001
	done
	mapfile -t IPBlock < /etc/firewall/to_block.ipv4
	for IP in "${IPBlock[@]}"; do
		add_ipblock_actions "${IP}" &
		#sleep 0.001
	done
	wait
	ipset swap temp_${IPSLISTBADIP} ${IPSLISTBADIP}
	ipset destroy temp_${IPSLISTBADIP}
}

add_ipblock_actions()
{
	nice -n 30 $IPS add temp_${IPSLISTBADIP} $1 2> /dev/null
	nice -n 100 $DUMPCO -k src $1 > /dev/null 2>&1 &
	nice -n 100 $DUMPCO -k dst $1 > /dev/null 2>&1 &
	wait
}

add_ipblock6()
{
	local pid
	$IPS create ${IPSLISTBADIP}6 hash:net maxelem 999999999 family inet6 2> /dev/null &
	$IPS create temp_${IPSLISTBADIP}6 hash:net maxelem 999999999 family inet6 2> /dev/null && \
		$IPS flush temp_${IPSLISTBADIP}6 2> /dev/null & pid=$!
	declare -a IPBlock6
	mapfile -t IPBlock6 < /etc/firewall/to_block.ipv6
	local IP
	wait $pid
	for IP in "${IPBlock[@]}"; do
		add_ipblock6_actions "${IP}" &
		#sleep 0.001
	done
	mapfile -t IPBlock6 < /etc/firewall/firewall.block.ip6
	for IP in "${IPBlock[@]}"; do
		add_ipblock6_actions "${IP}" &
		#sleep 0.001
	done
	wait
	ipset swap temp_${IPSLISTBADIP}6 ${IPSLISTBADIP}6
	ipset destroy temp_${IPSLISTBADIP}6
}

add_ipblock6_actions()
{
	nice -n 30 $IPS add temp_${IPSLISTBADIP}6 $1 2> /dev/null
	nice -n 100 $DUMPCO -6 -k src $1 > /dev/null 2>&1 &
	nice -n 100 $DUMPCO -6 -k dst $1 > /dev/null 2>&1 &
	wait
}

add_iplocal()
{
	$IPS create ${IPSLOCALS} hash:net maxelem 999999999 2> /dev/null
	$IPS flush ${IPSLOCALS} 2> /dev/null
	$IPS add ${IPSLOCALS} 192.168.0.0/16 2> /dev/null &
	$IPS add ${IPSLOCALS} 172.16.0.0/12 2> /dev/null &
	$IPS add ${IPSLOCALS} 10.0.0.0/8 2> /dev/null &
	wait
}

add_iplocal6()
{
	$IPS create ${IPSLOCALS}6 hash:net maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPSLOCALS}6 2> /dev/null
	$IPS add ${IPSLOCALS}6 fe80::/10 2> /dev/null &
	$IPS add ${IPSLOCALS}6 fc00::/7 2> /dev/null &
	$IPS add ${IPSLOCALS}6 fd00::/8 2> /dev/null &
	wait
}

add_iplocal6_80()
{
	$IPS create ${IPSLOCALS}6_80 hash:net maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPSLOCALS}6_80 2> /dev/null
	$IPS add ${IPSLOCALS}6_80 fe80::/10 2> /dev/null &
	$IPS add ${IPSLOCALS}6_80 fe80::/64 2> /dev/null &
	wait
}

add_ip_plex()
{
	$IPS create $IPSPLEXIPS hash:ip maxelem 999999999 2> /dev/null
	$IPS flush $IPSPLEXIPS 2> /dev/null
	$IPS create ${IPSPLEXIPS}6 hash:ip maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPSPLEXIPS}6 2> /dev/null
	# Open plex ports https://s3-eu-west-1.amazonaws.com/plex-sidekiq-servers-list/sidekiqIPs.txt
	$IPS add $IPSPLEXIPS "54.170.120.91" 2> /dev/null &
	$IPS add $IPSPLEXIPS "46.51.207.89" 2> /dev/null &
	local line
	curl -s https://s3-eu-west-1.amazonaws.com/plex-sidekiq-servers-list/sidekiqIPs.txt | while read -r line
	do
		if is_ipv4 "${line}"; then
			$IPS add $IPSPLEXIPS "${line}" 2> /dev/null &
		elif is_ipv6 "${line}"; then
			$IPS add ${IPSPLEXIPS}6 "${line}" 2> /dev/null &
		else
			echo "IP non reconnue : ${line}"
		fi
	done
	wait
}

add_country_open_set()
{
	$IPS create ${IPCCOPEN} hash:net maxelem 999999999 2> /dev/null
	$IPS create ${IPCCOPEN}6 hash:net maxelem 999999999 family inet6 2> /dev/null
	$IPS flush ${IPCCOPEN} 2> /dev/null
	$IPS flush ${IPCCOPEN}6 2> /dev/null

	for country in $(echo $countryOpenPort | tr ',' '\n'); do
		country=$(echo "$country" | tr '[:upper:]' '[:lower:]')
		get_ip_country_open "https://www.ipdeny.com/ipblocks/data/aggregated/${country}-aggregated.zone" "${IPCCOPEN}" &
		get_ip_country_open "https://www.ipdeny.com/ipv6/ipaddresses/aggregated/${country}-aggregated.zone" "${IPCCOPEN}6" &
	done
	wait
}

get_ip_country_open() {
	local network
	local URL=$1
	local setIP=$2
	for network in $(curl ${URL} 2>/dev/null | grep -v "^#" | cut -d " " -f 1); do
		$IPS add ${setIP} ${network}
	done
}

add_doh &
add_doh6 &
add_ipaut &
add_ipaut6 &
add_iplocal &
add_iplocal6 &
add_iplocal6_80 &
add_ip_plex &
add_country_open_set &

/etc/firewall/firewall.get.list
add_ipblock &
add_ipblock6 &

wait
